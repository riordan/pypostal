name: Build Wheels (Linux)

on:
  push:
    branches: [ "main", "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:
  schedule:
    - cron: "0 12 1 * *"

# Explicitly define permissions
permissions:
  contents: read  # for actions/checkout
  security-events: write # for CodeQL if this job runs parallel to it
  actions: read   # for detecting workflow run conditions

jobs:
  build_wheels_linux:
    name: Build wheels on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Get libpostal submodule commit hash
        id: get_submodule_hash
        shell: bash
        run: |
          HASH=$(git submodule status vendor/libpostal | awk '{ sub(/^[+-]?/, ""); print $1 }')
          echo "hash=$HASH" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Upgrade pip and install cibuildwheel
        run: python -m pip install --upgrade pip cibuildwheel

      - name: Create test script for comprehensive testing
        run: |
          cat > run_comprehensive_tests.py << 'EOF'
          import unittest
          import sys
          import importlib.util

          # First verify basic import works
          print("Testing postal module import...")
          import postal
          print(f"postal imported successfully from {postal.__file__}")
          
          # Import the test modules
          print("Loading test modules...")
          
          # Helper function to load a module from file path
          def load_module_from_path(module_name, file_path):
              spec = importlib.util.spec_from_file_location(module_name, file_path)
              module = importlib.util.module_from_spec(spec)
              sys.modules[module_name] = module
              spec.loader.exec_module(module)
              return module
              
          # Load test modules
          try:
              load_module_from_path("postal.tests", "postal/tests/__init__.py")
              expand_tests = load_module_from_path("postal.tests.test_expand", "postal/tests/test_expand.py")
              parser_tests = load_module_from_path("postal.tests.test_parser", "postal/tests/test_parser.py")
              
              # Run tests
              print("\nRunning address expansion tests...")
              expand_suite = unittest.TestLoader().loadTestsFromModule(expand_tests)
              expand_result = unittest.TextTestRunner(verbosity=2).run(expand_suite)
              
              print("\nRunning address parser tests...")
              parser_suite = unittest.TestLoader().loadTestsFromModule(parser_tests)
              parser_result = unittest.TextTestRunner(verbosity=2).run(parser_suite)
              
              # Check results
              if expand_result.wasSuccessful() and parser_result.wasSuccessful():
                  print("\nAll tests passed successfully!")
                  sys.exit(0)
              else:
                  print("\nSome tests failed!")
                  sys.exit(1)
                  
          except Exception as e:
              print(f"Error running tests: {e}")
              import traceback
              traceback.print_exc()
              sys.exit(1)
          EOF
          chmod +x run_comprehensive_tests.py

      - name: Build wheels (x86_64)
        env:
          CIBW_BUILD: "cp311-* cp312-*"
          CIBW_BEFORE_BUILD_LINUX: |
            yum install -y curl autoconf automake libtool pkgconfig || \
            apt-get update && apt-get install -y curl autoconf automake libtool pkg-config
          CIBW_ARCHS: "x86_64"
          CIBW_SKIP: "pp* *-musllinux_* cp37-win*"
          CIBW_BUILD_VERBOSITY: "1"
          # Basic import test first, then comprehensive tests
          CIBW_TEST_COMMAND: >-
            python -c "import os; print('Testing basic postal import...'); import postal; print(f'postal imported successfully. __file__={postal.__file__}')" &&
            python {package}/run_comprehensive_tests.py
        run: cibuildwheel --output-dir wheelhouse

      # Only build ARM wheels on main/master branches and tags for releases
      # Skip for PRs to avoid long build times
      - name: Build wheels (aarch64)
        if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        env:
          CIBW_BUILD: "cp311-* cp312-*"
          CIBW_BEFORE_BUILD_LINUX: |
            yum install -y curl autoconf automake libtool pkgconfig || \
            apt-get update && apt-get install -y curl autoconf automake libtool pkg-config
          CIBW_ARCHS: "aarch64"
          CIBW_SKIP: "pp* *-musllinux_* cp37-win*"
          CIBW_BUILD_VERBOSITY: "1"
          # Basic import test first, then comprehensive tests
          CIBW_TEST_COMMAND: >-
            python -c "import os; print('Testing basic postal import...'); import postal; print(f'postal imported successfully. __file__={postal.__file__}')" &&
            python {package}/run_comprehensive_tests.py
        run: cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux
          path: ./wheelhouse/*.whl
